package poly.controller;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.apache.log4j.Logger;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;

import poly.dto.UserDTO;
import poly.service.IUserService;
import poly.util.CmmUtil;
import poly.util.EncryptUtil;


@Controller
public class UserController {
	
	private Logger log = Logger.getLogger(this.getClass());
	
	@Resource(name = "UserService")
	private IUserService userService;

	// 관리자 로그인 페이지 접속 
	@RequestMapping(value="user/login")
	public String userLogin(HttpServletRequest request, ModelMap model) {
		
		log.info(this.getClass() + "O_GEUNTAE Login start!!");
		log.info(this.getClass() + "O_GEUNTAE Login end!!");
		
		return "/user/login";
	}
	
	// 관리자 로그인 처리 매퍼
	@RequestMapping(value="user/userLoginProc.do")
	public String userLoginProc(HttpServletRequest request, ModelMap model, HttpSession session) throws Exception{
		log.info(this.getClass() + "userLoginProc start!!");
		
		String email = CmmUtil.nvl(request.getParameter("userEmail"));
		// password 받고 Hash로 암호화 한다음 널 체크 하여 변수에 대입
		String pwd = CmmUtil.nvl(EncryptUtil.encHashSHA256(request.getParameter("password")));

		UserDTO uDTO = new UserDTO();
		
		uDTO.setAemail(email);
		uDTO.setApw(pwd);
		
		uDTO = userService.getLoginInfo(uDTO);
		
		log.info("uDTO null?" + (uDTO == null));
		String msg = "";
		String url = "";
		
		if(uDTO == null) {
			msg = "로그인 실패";
			url = "/user/login.do";
		} else {
			log.info("uDTO AEMAIL : " + uDTO.getAemail());
			log.info("uDTO PWD : " + uDTO.getApw());
			log.info("uDTO NAME : " + uDTO.getAname());
			
			msg = "로그인 성공";
			url = "/opencvIndex.do";
			
			session.setAttribute("aemail", uDTO.getAemail());
			session.setAttribute("aname", uDTO.getAname());
		}
		

		model.addAttribute("msg", msg);
		model.addAttribute("url", url);
		
		log.info(this.getClass() + "user/userLoginProc end!!");
		
		return "/user/redirect";
	}
	// 로그아웃 처리 메퍼
	@RequestMapping(value="user/logOut.do")
	public String logOut(HttpSession session, Model model) throws Exception{
		
		log.info(this.getClass() + "user/logOut start!!");

		String msg = "";
		String url = "";
		msg = "로그아웃 성공";
		url = "/user/login.do";
		
		session.invalidate(); // 세션 정보 초기화
		
		
		model.addAttribute("msg", msg);
		model.addAttribute("url", url);
		
		log.info(this.getClass() + "user/loginOut end!!");
		
		return "/user/redirect";
	}
	
	
		// 관리자 등록 페이지 이동 매퍼
		@RequestMapping(value="user/regAdmin.do")
		public String RegAdmin() throws Exception{
			
			log.info(this.getClass() + "regAdmin Page start!!");
			
			log.info(this.getClass() + "regAdmin Page end!!");
			
			return "/user/regAdmin";
		}
		
		// 관리자 등록 처리(가입 처리 프로세스)
		@RequestMapping(value="user/regAdminProc")
		public String RegAdminProc(HttpServletRequest request, Model model) throws Exception{
			log.info(this.getClass() + "regAdmin Proc start!!");
			
			String msg = "";
			String url= "";
			
			UserDTO pDTO = null;
			int res = 0; // 데이터 들어갔나 확인용
			
			try {
				
			String aname = CmmUtil.nvl(request.getParameter("aName"));
			String aemail = CmmUtil.nvl(request.getParameter("aEmail"));
			String apw = CmmUtil.nvl(EncryptUtil.encHashSHA256(request.getParameter("password")));
			String checkNum = CmmUtil.nvl(EncryptUtil.encHashSHA256(request.getParameter("checkNum")));
			
			
			log.info("aname : " + aname);
			log.info("aemail : " + aemail);
			log.info("password(hashOK) : " + apw);
			log.info("checkNum : " + checkNum);
			
			if(checkNum.equals("940728")) {
			
			pDTO = new UserDTO();
			log.info("DTO 메모리 올림 CHECK!!");
			// 디티오 변수에 저장
			pDTO.setAname(aname);
			pDTO.setAemail(aemail);
			pDTO.setApw(apw);
			
			// 비즈니스 로직 실행 디티오 변수에 저장된 값들을 서비스에 넘겨 JDBC를 통해 mySQL로 결국 넘길 거임
			res = userService.insertUserInfo(pDTO);
			
			log.info("res 0이면 문제 발생 : " + res);
			
			if(res == 1) { // 리턴 값이 1이면 성공이기 때문에 실행
				msg = "관리자 등록이 완료되었습니다.";
				url = "/user/login.do";
				
				log.info("가입자 이름은 : " + pDTO.getAname());
			} else { //실패하면 실행
				msg = "이미 등록이 되어있습니다. : ";
				url = "/user/regAdmin.do";
				log.info("실패");
			}
				
			} catch(Exception e){
				log.info(e.toString());
				e.printStackTrace();
				
			}finally {
				log.info(this.getClass() + " regAdmin Proc end!!");
				model.addAttribute("msg", msg);
				model.addAttribute("url", url);
				pDTO = null;
			}
			
			return "/user/redirect";
		}
}
